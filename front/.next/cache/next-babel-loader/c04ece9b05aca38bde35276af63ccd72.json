{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork, take, call } from 'redux-saga/effects';\n\nfunction logInAPI() {\n  return axios.post('/api/login');\n}\n\nfunction logIn() {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(logInAPI);\n\n        case 2:\n          result = _context.sent;\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return take('LOG_IN', logIn);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return take('LOG_OUT');\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return take('ADD_POST');\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogin), fork(watchLogOut), fork(watchAddPost)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/sagas/index.js"],"names":["logIn","watchLogin","watchLogOut","watchAddPost","rootSaga","all","fork","take","call","logInAPI","axios","post","result"],"mappings":";;oDAMUA,K;qDAIAC,U;qDAIAC,W;qDAIAC,Y;qDAIeC,Q;;AAtBzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,QAAsC,oBAAtC;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,SAAUX,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACiB,iBAAMQ,IAAI,CAACC,QAAD,CAAV;;AADjB;AACQG,UAAAA,MADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUX,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,IAAI,CAAC,QAAD,EAAWP,KAAX,CAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUE,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMK,IAAI,CAAC,SAAD,CAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUJ,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMI,IAAI,CAAC,UAAD,CAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUH,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRC,IAAI,CAACL,UAAD,CADI,EAERK,IAAI,CAACJ,WAAD,CAFI,EAGRI,IAAI,CAACH,YAAD,CAHI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, take, call } from 'redux-saga/effects'\n\nfunction logInAPI() {\n  return axios.post('/api/login')\n}\n\nfunction* logIn() {\n  const result = yield call(logInAPI)\n}\n\nfunction* watchLogin() {\n  yield take('LOG_IN', logIn)\n}\n\nfunction* watchLogOut() {\n  yield take('LOG_OUT')\n}\n\nfunction* watchAddPost() {\n  yield take('ADD_POST')\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchLogin), \n    fork(watchLogOut),\n    fork(watchAddPost),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}