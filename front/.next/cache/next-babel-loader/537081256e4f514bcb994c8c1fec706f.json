{"ast":null,"code":"var _jsxFileName = \"/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/components/PostImages.js\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostImages = ({\n  images\n}) => {\n  const onZoom = useCallback(() => {}, []);\n\n  if (images.length === 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[0].src,\n        alt: image[0].src,\n        onClick: onZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uAD6C\\uD604 \\uC911 ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\nPostImages.PropTypes = {\n  images: PropTypes.arrayOf(PropTypes.object)\n};\nexport default PostImages;","map":{"version":3,"sources":["/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/components/PostImages.js"],"names":["React","useCallback","PropTypes","PostImages","images","onZoom","length","src","image","arrayOf","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACjC,QAAMC,MAAM,GAAGJ,WAAW,CAAC,MAAM,CAEhC,CAFyB,EAEvB,EAFuB,CAA1B;;AAGA,MAAIG,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;AACvB,wBACE;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEF,MAAM,CAAC,CAAD,CAAN,CAAUG,GAApB;AAAyB,QAAA,GAAG,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASD,GAAvC;AAA4C,QAAA,OAAO,EAAEF;AAArD;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAKD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAdD;;AAgBAF,UAAU,CAACD,SAAX,GAAuB;AACrBE,EAAAA,MAAM,EAAEF,SAAS,CAACO,OAAV,CAAkBP,SAAS,CAACQ,MAA5B;AADa,CAAvB;AAIA,eAAeP,UAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nconst PostImages = ({ images }) => {\n  const onZoom = useCallback(() => {\n    \n  }, [])\n  if (images.length === 1) {\n    return (\n      <>\n        <img src={images[0].src} alt={image[0].src} onClick={onZoom} />\n      </>\n    );\n  }\n  return (\n    <div>구현 중 ...</div>\n  );\n}\n\nPostImages.PropTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default PostImages;"]},"metadata":{},"sourceType":"module"}