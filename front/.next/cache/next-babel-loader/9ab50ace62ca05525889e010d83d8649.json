{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  if (typeof action === 'function') {\n    return action(dispatch, getState, extraArgument);\n  }\n\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","reducer","createSagaMiddleware","loggerMiddleware","dispatch","getState","next","action","extraArgument","configureStore","sagaMiddleware","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6BC,IAAD,IAAWC,MAAD,IAAY;AACzE,MAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,WAAOA,MAAM,CAACH,QAAD,EAAWC,QAAX,EAAqBG,aAArB,CAAb;AACD;;AAED,SAAOF,IAAI,CAACC,MAAD,CAAX;AACD,CAND;;AAQA,MAAME,cAAc,GAAG,MAAM;AAC3B,QAAMC,cAAc,GAAGR,oBAAoB,EAA3C;AACA,QAAMS,WAAW,GAAG,CAACD,cAAD,EAAiBP,gBAAjB,CAApB;AACA,QAAMS,QAAQ,GAAG,QACbb,OAAO,CAACF,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CADM,GAEbX,mBAAmB,CAACH,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CAFvB;AAGA,QAAME,KAAK,GAAGf,WAAW,CAACG,OAAD,EAAUW,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CARD;;AAUA,MAAMC,OAAO,GAAGlB,aAAa,CAACa,cAAD,EAAiB;AAC5CM,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\n\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n  if (typeof action === 'function') {\n    return action(dispatch, getState, extraArgument);\n  }\n\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares))\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, { \n  debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}