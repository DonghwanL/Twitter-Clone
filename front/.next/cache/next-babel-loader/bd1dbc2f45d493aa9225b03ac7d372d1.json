{"ast":null,"code":"import { all, fork, take, call, put } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI() {\n  return axios.post('/api/login');\n}\n\nfunction* logIn() {\n  try {\n    const result = yield call(logInAPI);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  } catch (error) {}\n}\n\nfunction* watchLogin() {\n  yield take('LOG_IN', logIn);\n}\n\nfunction* watchLogOut() {\n  yield take('LOG_OUT');\n}\n\nfunction* watchAddPost() {\n  yield take('ADD_POST');\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/sagas/index.js"],"names":["all","fork","take","call","put","axios","logInAPI","post","logIn","result","type","data","error","watchLogin","watchLogOut","watchAddPost","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAOD,KAAK,CAACE,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,UAAUC,KAAV,GAAkB;AAChB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMN,IAAI,CAACG,QAAD,CAAzB;AACA,UAAMF,GAAG,CAAC;AACRM,MAAAA,IAAI,EAAC,gBADG;AAERC,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOC,KAAP,EAAc,CAEf;AAGF;;AAED,UAAUC,UAAV,GAAuB;AACrB,QAAMX,IAAI,CAAC,QAAD,EAAWM,KAAX,CAAV;AACD;;AAED,UAAUM,WAAV,GAAwB;AACtB,QAAMZ,IAAI,CAAC,SAAD,CAAV;AACD;;AAED,UAAUa,YAAV,GAAyB;AACvB,QAAMb,IAAI,CAAC,UAAD,CAAV;AACD;;AAED,eAAe,UAAUc,QAAV,GAAqB;AAClC,QAAMhB,GAAG,CAAC,CACRC,IAAI,CAACY,UAAD,CADI,EAERZ,IAAI,CAACa,WAAD,CAFI,EAGRb,IAAI,CAACc,YAAD,CAHI,CAAD,CAAT;AAKD","sourcesContent":["import { all, fork, take, call, put } from 'redux-saga/effects'\nimport axios from 'axios';\n\nfunction logInAPI() {\n  return axios.post('/api/login')\n}\n\nfunction* logIn() {\n  try {\n    const result = yield call(logInAPI)\n    yield put({\n      type:'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  } catch (error) {\n    \n  }\n\n\n}\n\nfunction* watchLogin() {\n  yield take('LOG_IN', logIn)\n}\n\nfunction* watchLogOut() {\n  yield take('LOG_OUT')\n}\n\nfunction* watchAddPost() {\n  yield take('ADD_POST')\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchLogin), \n    fork(watchLogOut),\n    fork(watchAddPost),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}