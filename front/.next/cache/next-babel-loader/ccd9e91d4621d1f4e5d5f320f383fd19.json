{"ast":null,"code":"var _jsxFileName = \"/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/components/PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { Button, ButtonGroup, Card, Popover, List } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from '../components/PostImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setcommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    }); // true/false\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setcommentFormOpened(function (prev) {\n      return !prev;\n    }); // true/false\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 35\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, _this)],\n      children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"8aOi/vJ6v3pZGqWSniiSeKl8IA4=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object) // 객체들의 배열\n\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/components/PostCard.js"],"names":["React","useCallback","useState","Button","ButtonGroup","Card","Popover","List","PropTypes","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useSelector","Avatar","PostImages","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setcommentFormOpened","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","content","comments","length","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Button, ButtonGroup, Card, Popover, List } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from '../components/PostImages';\n\nconst PostCard = ({ post }) => {\n  const id = useSelector((state) => state.user.me?.id);\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setcommentFormOpened] = useState(false);\n  \n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev); // true/false\n  }, [])\n\n  const onToggleComment = useCallback(() => {\n    setcommentFormOpened((prev) => !prev); // true/false\n  }, [])\n\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={ post.Images[0] && <PostImages images={post.Images} /> }\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked \n          ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n          : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n          <Popover key=\"more\" content={(\n            <Button.Group>\n                {id && post.User.id === id \n                ? (\n                  <>\n                  <Button>수정</Button>\n                  <Button type=\"danger\">삭제</Button>\n                  </>\n                ) \n                : <Button>신고</Button> }\n            </Button.Group>\n          )}>\n            <EllipsisOutlined />\n          </Popover>\n        ]}\n      >\n        <Card.Meta \n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n        <Button></Button>\n      </Card>\n\n      {commentFormOpened && (\n        <div>\n          <CommentForm />\n          <List \n            header={`${post.comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            \n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images:PropTypes.arrayOf(PropTypes.object), // 객체들의 배열\n  }).isRequired,\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}