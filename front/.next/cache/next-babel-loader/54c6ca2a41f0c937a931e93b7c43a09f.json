{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/components/CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    return state.user.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: [/*#__PURE__*/_jsxDEV(Input.Textara, {\n      value: commentText,\n      onchage: onChangeCommentText,\n      row: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      children: \"\\uC791\\uC131\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CommentForm, \"PptqMkMnW7reCXQEE7qotaIWwp0=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.PropTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","PropTypes","Form","Input","Button","useInput","useSelector","CommentForm","post","id","state","user","commentText","onChangeCommentText","onSubmitComment","console","log","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAChC,MAAMC,EAAE,GAAGH,WAAW,CAAE,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWF,EAAf;AAAA,GAAP,CAAtB;;AAEA,kBAA2CJ,QAAQ,CAAC,EAAD,CAAnD;AAAA;AAAA,MAAOO,WAAP;AAAA,MAAoBC,mBAApB;;AAEA,MAAMC,eAAe,GAAGd,WAAW,CAAC,YAAM;AACxCe,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACC,EAAjB,EAAqBG,WAArB;AACD,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA,4BACE,QAAC,KAAD,CAAO,OAAP;AACE,MAAA,KAAK,EAAEF,WADT;AAEE,MAAA,OAAO,EAAEC,mBAFX;AAGE,MAAA,GAAG,EAAE;AAHP;AAAA;AAAA;AAAA;AAAA,aADF,eAME,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAnBD;;GAAMN,W;UACOD,W,EAEgCD,Q;;;KAHvCE,W;AAqBNA,WAAW,CAACN,SAAZ,GAAwB;AACtBO,EAAAA,IAAI,EAAEP,SAAS,CAACgB,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAeX,WAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { useSelector } from 'react-redux';\n\nconst CommentForm = ({ post }) => {\n  const id = useSelector((state => state.user.id));\n\n  const [commentText, onChangeCommentText] = useInput(''); \n\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Input.Textara \n        value={commentText}\n        onchage={onChangeCommentText}\n        row={4}\n      />\n      <Button type=\"primary\" htmlType=\"submit\">작성하기</Button>\n    </Form>\n  );\n}\n\nCommentForm.PropTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}