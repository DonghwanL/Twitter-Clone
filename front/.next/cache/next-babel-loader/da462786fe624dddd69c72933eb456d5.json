{"ast":null,"code":"var _jsxFileName = \"/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/components/CommentForm.js\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {}, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Input.Textara, {\n      value: commentText,\n      onchage: onChangeCommentText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}; // CommentForm.PropTypes = {\n//   post: \n// };\n\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","PropTypes","Form","Input","useInput","CommentForm","post","commentText","onChangeCommentText","onSubmitComment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCJ,QAAQ,CAAC,EAAD,CAAnD;AAEA,QAAMK,eAAe,GAAGT,WAAW,CAAC,MAAM,CAEzC,CAFkC,EAEhC,CAACO,WAAD,CAFgC,CAAnC;AAIA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,KAAD,CAAO,OAAP;AACE,MAAA,KAAK,EAAEA,WADT;AAEE,MAAA,OAAO,EAAEC;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAfD,C,CAiBA;AACA;AACA;;;AAEA,eAAeH,WAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input } from 'antd';\nimport useInput from '../hooks/useInput';\n\nconst CommentForm = ({ post }) => {\n  const [commentText, onChangeCommentText] = useInput(''); \n\n  const onSubmitComment = useCallback(() => {\n\n  }, [commentText]);\n\n  return (\n    <Form>\n      <Input.Textara \n        value={commentText}\n        onchage={onChangeCommentText}\n      />\n    </Form>\n  );\n}\n\n// CommentForm.PropTypes = {\n//   post: \n// };\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}