{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nimport thunkMiddleware from 'redux-thunk';\n\nvar configureStore = function configureStore() {\n  var middlewares = [thunkMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","reducer","thunkMiddleware","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,WAAW,GAAG,CAACF,eAAD,CAApB;AACA,MAAMG,QAAQ,GAAG,QACbN,OAAO,CAACF,eAAe,MAAf,SAAmBO,WAAnB,CAAD,CADM,GAEbJ,mBAAmB,CAACH,eAAe,MAAf,SAAmBO,WAAnB,CAAD,CAFvB;AAGA,MAAME,KAAK,GAAGR,WAAW,CAACG,OAAD,EAAUI,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CAPD;;AASA,IAAMC,OAAO,GAAGX,aAAa,CAACO,cAAD,EAAiB;AAC5CK,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nimport thunkMiddleware from 'redux-thunk';\n\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares))\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, { \n  debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}