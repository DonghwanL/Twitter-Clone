{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggingIn: false,\n  // 로그인 시도 중\n  isLoggedIn: false,\n  isLoggingOut: false,\n  // 로그아웃 시도 중\n  me: null,\n  signupData: {},\n  loginData: {}\n};\nexport const loginAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n};\nexport const logoutAction = () => {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case 'LOG_IN_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: action.data\n      });\n\n    case 'LOG_IN_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case 'LOG_OUT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case 'LOG_OUT_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/hwan/Desktop/Dev/React/react-nodebird/prepare/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggedIn","isLoggingOut","me","signupData","loginData","loginAction","data","type","logoutAction","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,KADa;AACN;AACpBC,EAAAA,UAAU,EAAE,KAFc;AAG1BC,EAAAA,YAAY,EAAE,KAHY;AAGL;AACrBC,EAAAA,EAAE,EAAE,IAJsB;AAK1BC,EAAAA,UAAU,EAAE,EALc;AAM1BC,EAAAA,SAAS,EAAE;AANe,CAArB;AASP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAE,gBADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,YAAY,GAAG,MAAM;AAChC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;;AAMP,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,QAAL;AACE,6CACOG,KADP;AAEIX,QAAAA,WAAW,EAAE;AAFjB;;AAIF,SAAK,gBAAL;AACE,6CACOW,KADP;AAEIX,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE,IAHhB;AAIIE,QAAAA,EAAE,EAAES,MAAM,CAACL;AAJf;;AAMF,SAAK,gBAAL;AACE,6CACOI,KADP;AAEIX,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE;AAHhB;;AAKF,SAAK,SAAL;AACE,6CACOU,KADP;AAEIT,QAAAA,YAAY,EAAE;AAFlB;;AAIF,SAAK,iBAAL;AACE,6CACOS,KADP;AAEIT,QAAAA,YAAY,EAAE,KAFlB;AAGID,QAAAA,UAAU,EAAE,KAHhB;AAIIE,QAAAA,EAAE,EAAE;AAJR;;AAMF,SAAK,iBAAL;AACE,6CACOQ,KADP;AAEIT,QAAAA,YAAY,EAAE;AAFlB;;AAIF;AACE,aAAOS,KAAP;AArCJ;AAuCD,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  isLoggingIn: false, // 로그인 시도 중\n  isLoggedIn: false,\n  isLoggingOut: false, // 로그아웃 시도 중\n  me: null,\n  signupData: {},\n  loginData: {},\n}\n\nexport const loginAction = (data) => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data,\n  }\n}\n\nexport const logoutAction = () => {\n  return {\n    type: 'LOG_OUT_REQUEST',\n  }\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return {\n          ...state,\n          isLoggingIn: true,\n      }\n    case 'LOG_IN_SUCCESS':\n      return {\n          ...state,\n          isLoggingIn: false,\n          isLoggedIn: true,\n          me: action.data,\n      }\n    case 'LOG_IN_FAILURE':\n      return {\n          ...state,\n          isLoggingIn: false,\n          isLoggedIn: false,\n      }      \n    case 'LOG_OUT':\n      return {\n          ...state,\n          isLoggingOut: true,\n      }\n    case 'LOG_OUT_SUCCESS':\n      return {\n          ...state,\n          isLoggingOut: false,\n          isLoggedIn: false,\n          me: null,\n      }\n    case 'LOG_OUT_FAILURE':\n      return {\n          ...state,\n          isLoggingOut: false,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}